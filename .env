# The fully-qualified domain name for Bitwarden - what address do you want Bitwarden accessible?
# Used for caddy proxy and ddns with Cloudflare
DOMAIN=

# SMTP Details for Bitwarden
# Uncomment and fill in details if you want to use e-mail invitations
#SMTP_HOST=
#SMTP_FROM=
#SMTP_PORT=
#SMTP_SSL=
#SMTP_USERNAME=
#SMTP_PASSWORD=

# Setting up Bitwarden for the first time can be done in two ways:
# Uncomment the method you want to use / comment the one you don't
# Method 1. This is my preferred method because it avoids publicly enabling signup.
#           First generate an ADMIN_TOKEN using gthe command `openssl rand -base64 48`
#           After creating user(s), it's a good idea to disable the admin page entirely
#           by clearing the ADMIN_TOKEN variable; editing settings on the admin page
#           overrides these variables and can be cause confusion later on.
SIGNUPS_ALLOWED=false
ADMIN_TOKEN=
# Method 2. Disable signups entirely and create all accounts using the admin page.
#           Set up your primary account with SIGNUPS_ALLOWED=true, then set it to false once
#           you have created any accounts. 
#           Create an organization and send invites to users you want to join your org.
#           An empty ADMIN_TOKEN disables access to the admin page entirely.
#SIGNUPS_ALLOWED=true
#ADMIN_TOKEN=

# EMAIL address to use with Let's Encrypt certificate provisioning
EMAIL=

# The gcloud compute engine instance name; e.g. bitwarden (used when you created your vm)
GCLOUD_INSTANCE=

# The gcloud zone; e.g., us-central1-a
GCLOUD_ZONE=

# Get from the Cloudflare overview page, under API 
CLOUDFLARE_ZONE_ID=

# Get from the Cloudflare profile, under API Tokens
# Generate a API token for your domain with the permission "DNS:Edit" by either:
# 1. Using 'Edit zone DNS' template
# 2. Creating a custom tokwn with the permission Zone -> DNS -> Edit
CLOUDFLARE_ZONE_TOKEN=
